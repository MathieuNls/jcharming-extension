Reviewer 1:

>>Section IV, B - just before C - I understand why you do not look at the Java GUI and JDK, but I wonder what if the crash is an interaction issue? These types of issues are not detectable by your method?
Wahab: I guess here it is a matter of scope. I will write something.

>>Section IV, C, just under figure 4 - If all the frames are corrupt, you perform full up model checking? How often does this happen?
Wahab: This is a good point. Please add one or two lines what would happen if all the frames are corrupt.


Section IV, E - This reader wonders if the user is not able to provide some information (which is why we want to do this in an automated fashion), can we trust a threshold that they offer? Will they be informed enough to know what 80% of the frames means?

>>Section V, A, just below Table I - I understand that you used a random technique and it selected 7 bugs from one system, and one from others. It would have been nice to have at least 2 from each system though, for comparison.
Wahab: nothing to do here. I will indicate in the letter that it will take a a lot of space to do these analyses.

>>Table II - I wonder how long it took for the no scenarios to run. Did it take a very long time to realize that it did not work?
Wahab: Please let me know how long.

>>Just before Section VI, discussion of Struts - could this type of thing not happen often? How can you address it?
Wahab: Please add a paragraph to discuss this point.

>>Just before Section VI - Why not apply your approach to the "proper crash trace" and see if it did reproduce it?
Wahab: I am not sure what the reviewer means. I thought this is what we just did when we had a full trace.

--------------
Reviewer 2:

>>>- when there exists a sequence of state transition: whether or not it is
a "sequence" depends on the logic formula
Wahab: This comment is not clear to me. Let's not address it.

Page 4, 2nd col
>>- address the problem of nested exceptions: namely?
Wahab: Please add a sentence here.

>>- in Fig. 4, what is the entry?
Wahab: - I think the reviewer means Fig 2 of SANER paper, which is Fig. 4 in the journal version.
       - My suggestion is to change the figure to have the crash trace as the entry, but also add the system as an entry to the model checker.
       - There are two typos in the figure: "Fillaure" --> "Failure" and "Cleaned Crash Trace" --> "Clean Crash Trace"


>>- did you take WALA's slicer as-is or did you have to extend it?
Wahab: Please add a sentence clarifying this. 

Page 6, 1st col
>>- Fig.5: do you call WALA's slicer?
Wahab: Can you please address this?

>>- Fig.5: the two arrows in line 7 are fairly non-standard
Wahab: I don't understand what the reviewers means here. I think he is referring to Fig. 4 of SANER paper, but the arrows are OK. 

>>- Fig.5: typo in 'slide'
Wahab: Please check this. Again, you need to figure out which figure the reviewer is referring to. He mixed up the numbers.


Page 6, 2nd col
>>- why does serialization help with optimization?
Wahab: Can you comment on this. Otherwise, we need to remove the term optimization and replace it with something else.


Page 7, 1st col
>>- Can we use crash traces ... to reproduce on-field bugs: why should
the answer be anything other than 'yes'? Be more specific.
Wahab:  I will add something later.

Page 8, 1st col
>>- fonts in line 29
Wahab: Please look into this.

Page 9, 2nd col
>>- We believe that JCHARMING ..: what prevents you from checking it?
Wahab: nothing to do here. I will rewrite this paragraph to say that we demonstrated that JCHARMING....


-----------------------------

Reviewer 3:

"One thing that needs to be fixed is "Figure 5", the algorithm for computing the union of slices (btw., it's not really a figure). There are some inconsistencies (or bugs) in there:
- CurrentFrames = frames[i] when i has not been initialized
- the "for" loop is a bit strange. It's neither Pascal nor C/Java like, its semantics are not completely clear
- shouldn't the slice go from CurrentFrame to Frame[i+offset]?
- "Slide" should be "Slice"
- I wonder if the description cannot be simplified. I mean, the branch/offset is just for ignoring corrupted entries, right?"


"p. 5, introduction of bslice: my impression was that sometimes m and n are exchanged"